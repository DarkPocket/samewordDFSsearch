通过dfs算法寻找手机游戏“同一个世界”的解法
基本思路从第一个起点开始递归搜索每走一步，从下一个起点开始递归搜索，直到最后一个起点。最后一个起点开始dfs找到结果
输出并写入本地文件，没有则返回上一层从下一个坐标点继续dfs搜索


一 地图输入
手动输入地图 txt
txt 格式

空#
（普通）
黑x
白o
（起点）
黑-
白+

地图点阵
mappoint 
颜色  空0 黑-4  白4
 属性 空0  普通1  起点2
位置  i，j
 

二 运行过程
 读入地图
 
 查找起点startpoint、 放入startPosList
 
 获取第一个起点  坐标入对应起点栈 路线栈
 走一个有效步    坐标入对应起点栈
 反转颜色 判断结果
 {
 1相同  输出各个起点栈 退出
 2 不同 是否到终点  
 2.1 到终点 退出 
 2.2  从下一个起点开始搜索 递归
     没有起点 则当前点继续走
 
 }
 
 dfs（当前地图，当前位置，起点集合，当前为哪个起点）

 
 多线程 将原始地图读入后 分别旋转90 180 270 度 然后四个线程 从不同地图开始搜索
bug  读入地图 修改后 内存异常增加
 
想法 先 单独读取地图 然后旋转后 分别写入四个文件中
然后 每个线程从不同文件中读取地图

eigen-eigen可以不包含编译，未使用相关代码